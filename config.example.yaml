# Configuration for the Telegram bot.
telegram:
  # Token provided by Telegram's BotFather for authentication.
  token: 123456:ABC-DEF1234ghIkl-zyx57W2v1u123ew11

  # Bot administrators
  admins: [1234567890]

  # Ignore all messages, but keep handling button callbacks, poll answers, etc.
  # Useful when migrating the bot to another bot account.
  passive_mode: false

  # Configuration for specific chat threads.
  chats:
    # List of chats considered as residents-only.
    # User residency status status is added/revoked by joining/leaving these
    # chats by 'resident_tracker' module.
    # The welcome message is sent when joining the first chat in this list.
    residential:
      - -1001234567890
      - -1001234567890

    # List of threads for 'borrowed_items' module.
    borrowed_items:
      - { chat: -1001234567890, thread: 123 }

    # Thread for the 'dashboard' module.
    dashboard: { chat: -1001234567890, thread: 123 }

    # The ID of the backup message channel for the debates module.
    # Bot maintainer is supposed to create private channel and add bot into it.
    forward_channel: -1001234567890

    # Forward pinned messages from specified source chats to the target channel.
    forward_pins:
      - from: -1001234567890
        to: -1001234567890
        ignore_threads: [123]

    # Thread for the 'needs' module.
    needs: { chat: -1001234567890, thread: 123 }

    # Thread for the 'mac_monitoring' module.
    mac_monitoring: { chat: -1001234567890, thread: 456 }

    # Thread for the 'ask_to_visit' module.
    ask_to_visit: { chat: -1001234567890, thread: 789 }

    # List of chats considered as resident-owned. Used to print an admin table.
    resident_owned:
      - { id: -1001234567890, internal: true }

    # Chat to push Wiki.js update notifications.
    wikijs_updates: { chat: -1001234567890, thread: 123 }

    # Chat to send vortex of doom pings
    vortex_of_doom:
      schedule: "0 0 7 * * 2 *"
      chat: { chat: -1001234567890, thread: 111 }
      additional_text: "Ping: @username"

# Address to to provide HTTP API on.
server_addr: 127.0.0.1:8080

# Borrowed items configuration
borrowed_items:
  # Reminder settings for borrowed items
  reminders:
    # How often to check for overdue items (in hours)
    check_interval_hours: 6
    # After how many hours to consider an item overdue
    overdue_after_hours: 48
    # Maximum number of reminders to send for one item
    max_reminders: 3
    # Interval between reminders (in hours)
    reminder_interval_hours: 48

# Configuration to access external services.
services:
  # Microtik REST API is used to get list of MAC addresses of the connected
  # devices.
  mikrotik:
    host: 10.0.0.1
    username: SECRET
    password: SECRET

  # Home Assistant configuration.
  # FIXME: currently unused
  home_assistant:
    host: homeassistant.lo.f0rth.space
    token: SECRET

  # Wiki.js GraphQL API is used to monitor recent page updates.
  wikijs:
    url: https://wiki.f0rth.space
    # Bearer token for authentication. Could be extracted from either browser
    # console, or here: https://wiki.f0rth.space/a/api.
    token: SECRET
    # A path to the page containg welcome message, for the 'welcome' module.
    welcome_message_page: /en/residents/welcome-message
    # A path to the page contaning dashboard text, for the 'dashboard' module.
    dashboard_page: /en/residents/topic-index

  # OpenAI API configuration.
  openai:
    api_key: SECRET
    api_base: "https://openrouter.ai/api/v1"
    model: "google/gemini-2.5-flash-preview"
    # Use stub logic instead of OpenAI API. Useful for local testing.
    disable: false

  # LDAP configuration.
  ldap:
    domain: ldap.lo.f0rth.space
    port: 389
    tls: false
    verify_cert: false
    user: cn=admin,dc=f0rth,dc=space
    password: SECRET
    base_dn: dc=f0rth,dc=space
    groups_dn: ou=groups
    users_dn: ou=users

    attributes:
      user_class: forthspacePerson
      telegram_id: telegramId
      group_class: groupOfUniqueNames
      group_member: uniqueMember
      resident_group: residents

  # Racovina camera configuration.
  racovina_cam:
    # URL to the camera image.
    url: http://espcam-1.lo.f0rth.space:8081/

  # Vortex of Doom camera configuration.
  vortex_of_doom_cam:
    # URL to the camera image.
    url: http://espcam-2.lo.f0rth.space:8081/

  # Butler API for opening the door
  butler:
    url: http://butler.lo.f0rth.space:8080/control
    token: SECRET

# Natural Language Processing configuration
nlp:
  # Enable or disable the NLP functionality
  enabled: true
  # Words that trigger NLP processing (case insensitive)
  trigger_words:
    - "bot"
    - "бот"
    - "botka"
    - "ботка"
    - "@your_bot_username"
  # AI models. From dumbest to smartest. 3 required.
  models:
    - openai/gpt-4.1-nano
    - openai/gpt-4.1-mini
    - openai/gpt-4.1
  # Model for search queries
  search_model: openai/gpt-4o-mini-search-preview
  # Model for classification queries
  classification_model: google/gemini-2.0-flash-lite-001
  # Maximum number of messages to include in history context
  max_history: 30
  # Default memory lifetime in hours (168 = 7 days)
  memory_limit: 168
  # Random answer probability (set to 0 to disable, value from 0 to 100%)
  random_answer_probability: 3.33  # once per 30 messages
